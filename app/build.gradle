apply plugin: 'com.android.application'
apply from: 'tinker-support.gradle'
apply plugin: 'realm-android'
apply from: 'multiple-channel.gradle'
apply plugin: 'kotlin-android'
apply from: 'reinforce.gradle'
android {

    signingConfigs {
        release {
            storeFile file("./keystore/airline.jks")
            storePassword "al123456"
            keyAlias "airline"
            keyPassword "al123456"
        }
        debug {
            storeFile file("./keystore/airline.jks")
            storePassword "al123456"
            keyAlias "airline"
            keyPassword "al123456"
        }
    }
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.androidCompileSdkVersion
    buildToolsVersion globalConfiguration.androidBuildToolsVersion
    defaultConfig {
        applicationId globalConfiguration.applicationId
        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion
        versionCode globalConfiguration.versionCode
        versionName globalConfiguration.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions.includeCompileClasspath = true
        }
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//            }
//        }
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->  // each 或者 all
            //这里修改apk文件名
            def fileName = "小圆圆_${defaultConfig.versionCode}_" + "${defaultConfig.versionName}" + "_${variant.buildType.name}" + ".apk"
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith('.apk')) {
                outputFileName = fileName  //  output.outputFile 改为 outputFileName
            }

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def androidDependencies = rootProject.ext.androidDependencies
    def viewDependencies = rootProject.ext.viewDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation androidDependencies.appcompat_v7
    implementation "com.android.support.constraint:constraint-layout:${constraintVersion}"
    implementation androidDependencies.multidex
    //rx
    implementation dataDependencies.rxpermissions2
    implementation dataDependencies.rxbinding2
    implementation dataDependencies.rxjava2
    implementation dataDependencies.rxjavaandroid
    implementation project(path: ':RxKit')
    // 远程仓库集成方式（推荐）
    implementation dataDependencies.thinkerCrashReportUpgrade
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation dataDependencies.tinkerandroidlib
    implementation project(path: ':moduleCommon')
    implementation project(':modulePicture')
    implementation viewDependencies.butterKnife
    annotationProcessor viewDependencies.apt_butterKnife
    /*渠道信息统计分析*/
    implementation dataDependencies.wallelibrary
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.21"
    implementation 'com.contrarywind:Android-PickerView:4.1.7'

    implementation viewDependencies.glide
}
